name: Release Package and Deploy VitePress Site

on:
  push:
    branches: [master] # Your default branch
  workflow_dispatch:

permissions:
  contents: write # Crucial for semantic-release to create tags, releases, and commit files
  pages: write # For GitHub Pages deployment
  id-token: write # For GitHub Pages deployment
  actions: read # Optional, for some plugins

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }} # Ensures sequential runs for the same branch
  cancel-in-progress: false # Do not cancel in-progress production deployments/releases

jobs:
  release:
    name: Semantic Release
    runs-on: ubuntu-latest
    # Run only on the master branch and not on tags created by semantic-release
    if: github.ref == 'refs/heads/master' && !startsWith(github.event.head_commit.message, 'chore(release):')
    outputs:
      new_release_published: ${{ steps.semantic.outputs.new_release_published }}
      new_release_version: ${{ steps.semantic.outputs.new_release_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetches all history for all tags and branches

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '23' # As per your package.json
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Semantic Release
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN || '' }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release
        # To ensure subsequent jobs run even if no new release is made:
        # continue-on-error: true # Then check steps.semantic.outputs.new_release_published in dependent jobs

  build:
    name: Build VitePress Site
    runs-on: ubuntu-latest
    needs: release # Depends on the release job
    # Optionally, run only if a new release was published, or always run
    # if: needs.release.outputs.new_release_published == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        # This checkout will get the code state *after* semantic-release potentially updated
        # package.json, CHANGELOG.md and pushed them.

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Build with VitePress
        env:
          RELEASE_VERSION: ${{ needs.release.outputs.new_release_version || 'N/A' }}
        run: |
          echo "Building docs. Last release version: $RELEASE_VERSION"
          npm run docs:build # This is 'vitepress build docs'

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/.vitepress/dist

  deploy:
    name: Deploy to GitHub Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
